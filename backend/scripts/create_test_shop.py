#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import sys
import os
from pathlib import Path

# Add backend directory to Python path
backend_dir = Path(__file__).parent.parent
sys.path.insert(0, str(backend_dir))

from sqlalchemy.orm import Session
from app.db.session import get_db_session
from app.models.shop import Shop
from app.core.security import get_password_hash
from datetime import datetime, timedelta


def create_test_shop():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –≤—Ö–æ–¥–∞"""
    
    # Get database session
    SessionLocal = get_db_session()
    db = SessionLocal()
    
    try:
        # Check if test shop already exists
        existing_shop = db.query(Shop).filter(Shop.phone == "+77011234567").first()
        
        if existing_shop:
            print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:")
            print(f"   ID: {existing_shop.id}")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {existing_shop.name}")
            print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {existing_shop.phone}")
            print(f"   –ì–æ—Ä–æ–¥: {existing_shop.city}")
            return existing_shop
        
        # Create new test shop
        test_shop = Shop(
            name="–¢–µ—Å—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω —Ü–≤–µ—Ç–æ–≤",
            phone="+77011234567",
            email="test@cvety.kz",
            telegram_id="123456789",
            telegram_username="test_flower_shop",
            address="—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 123",
            city="–ê–ª–º–∞—Ç—ã",
            description="–¢–µ—Å—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
            business_hours={
                "mon": ["09:00", "18:00"],
                "tue": ["09:00", "18:00"],
                "wed": ["09:00", "18:00"],
                "thu": ["09:00", "18:00"],
                "fri": ["09:00", "18:00"],
                "sat": ["10:00", "16:00"],
                "sun": []
            },
            currency="KZT",
            timezone="Asia/Almaty",
            language="ru",
            is_active=True,
            is_verified=True,
            plan="premium",
            trial_ends_at=datetime.utcnow() + timedelta(days=30)
        )
        
        db.add(test_shop)
        db.commit()
        db.refresh(test_shop)
        
        print("‚ú® –¢–µ—Å—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        print(f"   ID: {test_shop.id}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {test_shop.name}")
        print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {test_shop.phone}")
        print(f"   Email: {test_shop.email}")
        print(f"   –ü–ª–∞–Ω: {test_shop.plan}")
        print("\nüì± –î–ª—è –≤—Ö–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {test_shop.phone}")
        print("   –ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: –ª—é–±–æ–π 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ (–≤ —Ä–µ–∂–∏–º–µ DEBUG)")
        print("\nüí° –ï—Å–ª–∏ DEBUG=False, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Telegram –±–æ—Ç @lekenbot")
        
        return test_shop
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞: {e}")
        db.rollback()
        raise
    finally:
        db.close()


if __name__ == "__main__":
    print("üå∏ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è Cvety.kz")
    print("-" * 50)
    
    # Check if running in production
    railway_env = os.getenv("RAILWAY_ENVIRONMENT")
    if railway_env == "production":
        response = input("‚ö†Ô∏è  –í—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –≤ PRODUCTION –æ–∫—Ä—É–∂–µ–Ω–∏–∏. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ")
        if response.lower() != 'y':
            print("–û—Ç–º–µ–Ω–µ–Ω–æ.")
            sys.exit(0)
    
    create_test_shop()