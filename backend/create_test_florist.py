#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–ª–æ—Ä–∏—Å—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend –≤ sys.path
backend_path = Path(__file__).parent
sys.path.insert(0, str(backend_path))

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from app.core.config import get_settings

def create_test_florist():
    settings = get_settings()
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    engine = create_engine(settings.DATABASE_URL)
    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
    db = SessionLocal()
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏
        from app.models.user import User, UserRole
        from app.models.shop import Shop
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—ã–π –º–∞–≥–∞–∑–∏–Ω
        shop = db.query(Shop).first()
        if not shop:
            print("‚ùå –ù–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –º–∞–≥–∞–∑–∏–Ω.")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –º–∞–≥–∞–∑–∏–Ω: {shop.name} (ID: {shop.id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ñ–ª–æ—Ä–∏—Å—Ç —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º
        test_phone = "+77051234567"  # –¢–µ—Å—Ç–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        existing_florist = db.query(User).filter(
            User.phone == test_phone,
            User.role == UserRole.florist
        ).first()
        
        if existing_florist:
            print(f"‚ÑπÔ∏è  –§–ª–æ—Ä–∏—Å—Ç —Å –Ω–æ–º–µ—Ä–æ–º {test_phone} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:")
            print(f"   - –ò–º—è: {existing_florist.name}")
            print(f"   - ID: {existing_florist.id}")
            print(f"   - Telegram ID: {existing_florist.telegram_id}")
            return
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Ñ–ª–æ—Ä–∏—Å—Ç–∞
        new_florist = User(
            phone=test_phone,
            name="–¢–µ—Å—Ç–æ–≤—ã–π –§–ª–æ—Ä–∏—Å—Ç",
            email="florist@test.com",
            role=UserRole.florist,
            is_active=True,
            shop_id=shop.id,
            permissions={
                "orders": True,      # –ú–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å –∑–∞–∫–∞–∑—ã
                "warehouse": False,  # –ù–µ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–∫–ª–∞–¥–æ–º
                "customers": False,  # –ù–µ –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤
                "production": True,  # –ú–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º
                "settings": False,   # –ù–µ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                "users": False      # –ù–µ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
            }
        )
        
        db.add(new_florist)
        db.commit()
        db.refresh(new_florist)
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–ª–æ—Ä–∏—Å—Ç:")
        print(f"   - –ò–º—è: {new_florist.name}")
        print(f"   - –¢–µ–ª–µ—Ñ–æ–Ω: {new_florist.phone}")
        print(f"   - ID: {new_florist.id}")
        print(f"   - –ú–∞–≥–∞–∑–∏–Ω: {shop.name}")
        print(f"   - –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:")
        for perm, value in new_florist.permissions.items():
            status = "‚úÖ" if value else "‚ùå"
            print(f"     {status} {perm}")
        
        print("\nüì± –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:")
        print(f"   1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram Mini App")
        print(f"   2. –ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –Ω–æ–º–µ—Ä–∞ –≤–≤–µ–¥–∏—Ç–µ: {test_phone}")
        print(f"   3. –°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –≤–∞—Å –∫–∞–∫ —Ñ–ª–æ—Ä–∏—Å—Ç–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    create_test_florist()