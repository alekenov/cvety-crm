#!/usr/bin/env python3
"""
Test complete OTP flow: register phone + send OTP
"""

import asyncio
import sys
from pathlib import Path

# Add parent directory to path
sys.path.insert(0, str(Path(__file__).parent))

from app.services.telegram_service import telegram_service
from app.services.redis_service import redis_service
from app.core.config import get_settings

async def test_complete_otp_flow():
    """Test complete OTP flow"""
    settings = get_settings()
    phone = '+77015211545'
    test_telegram_id = 987654321  # –¢–µ—Å—Ç–æ–≤—ã–π ID
    
    print(f"ü§ñ –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç OTP flow...")
    
    try:
        # Step 1: Register phone in Redis (simulate bot registration)
        telegram_data = {
            'telegram_id': str(test_telegram_id),
            'telegram_username': 'test_user',
            'first_name': 'Test',
            'last_name': 'User'
        }
        
        redis_service.set_with_ttl(f'telegram:{phone}', telegram_data, 86400)
        print(f"‚úÖ –®–∞–≥ 1: –ù–æ–º–µ—Ä {phone} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ Redis")
        
        # Step 2: Initialize telegram service
        await telegram_service.initialize(settings.TELEGRAM_BOT_TOKEN)
        print("‚úÖ –®–∞–≥ 2: Telegram service –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # Step 3: Check registration
        stored_data = redis_service.get(f"telegram:{phone}")
        print(f"‚úÖ –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {stored_data}")
        
        # Step 4: Send OTP
        if stored_data and stored_data.get("telegram_id"):
            telegram_id = int(stored_data["telegram_id"])
            test_otp = "555777"
            
            print(f"üì§ –®–∞–≥ 4: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º OTP {test_otp} –Ω–∞ telegram_id: {telegram_id}")
            result = await telegram_service.send_otp(telegram_id, test_otp)
            
            if result:
                print("‚úÖ OTP –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞ (–Ω–æ chat –Ω–µ –Ω–∞–π–¥–µ–Ω - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ ID)")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ OTP")
        else:
            print("‚ùå –û—à–∏–±–∫–∞: –ù–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Redis")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    finally:
        await telegram_service.stop()

if __name__ == "__main__":
    asyncio.run(test_complete_otp_flow())