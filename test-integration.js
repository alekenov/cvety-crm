// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
const axios = require('axios');

async function testIntegration() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∏ –±—ç–∫–µ–Ω–¥–∞...\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:');
    const docsResponse = await axios.get('http://localhost:8000/api/docs');
    console.log('‚úÖ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞\n');
    
    // 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤
    console.log('2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤:');
    const ordersResponse = await axios.get('http://localhost:8000/api/orders/');
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: ${ordersResponse.data.total}`);
    console.log('–ó–∞–∫–∞–∑—ã:', ordersResponse.data.items.map(order => ({
      id: order.id,
      status: order.status,
      customer: order.customer_phone,
      total: order.total
    })));
    console.log();
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–∫–∏–Ω–≥–∞
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–∫–∏–Ω–≥–∞:');
    const trackingToken = ordersResponse.data.items[0]?.tracking_token;
    if (trackingToken) {
      const trackingResponse = await axios.get(`http://localhost:8000/api/tracking/${trackingToken}`);
      console.log('‚úÖ –¢—Ä–µ–∫–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç:', {
        status: trackingResponse.data.status,
        address: trackingResponse.data.address
      });
    }
    console.log();
    
    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    console.log('4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥:');
    try {
      const proxyResponse = await axios.get('http://localhost:5174/api/orders/');
      console.log('‚úÖ –ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      console.log(`   –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏: ${proxyResponse.data.total}`);
    } catch (error) {
      console.log('‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    }
    
    console.log('\n‚ú® –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    if (error.response) {
      console.error('   –°—Ç–∞—Ç—É—Å:', error.response.status);
      console.error('   –î–∞–Ω–Ω—ã–µ:', error.response.data);
    }
  }
}

testIntegration();