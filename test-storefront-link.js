import { chromium } from 'playwright';

(async () => {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏—Ç—Ä–∏–Ω—É –≤ CRM...');
  
  const browser = await chromium.launch({ 
    headless: false,
    slowMo: 1000 
  });
  
  const page = await browser.newPage();
  
  try {
    // –®–∞–≥ 1: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
    console.log('1. –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞...');
    await page.goto('http://localhost:5177/login');
    await page.waitForSelector('input[type="tel"]', { timeout: 5000 });
    
    // –®–∞–≥ 2: –í–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    console.log('2. –í–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞...');
    await page.fill('input[type="tel"]', '+77771234567');
    
    // –®–∞–≥ 3: –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ OTP
    console.log('3. –ó–∞–ø—Ä–æ—Å OTP...');
    await page.click('button:has-text("–ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥")');
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ OTP —á–µ—Ä–µ–∑ API
    console.log('4. –ü–æ–ª—É—á–µ–Ω–∏–µ OTP —á–µ—Ä–µ–∑ API...');
    const response = await fetch('http://localhost:8001/api/auth/request-otp', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ phone: '+77771234567' })
    });
    const otpData = await response.json();
    console.log('   OTP –∫–æ–¥:', otpData.otp);
    
    // –®–∞–≥ 4: –í–≤–æ–¥ OTP –∫–æ–¥–∞
    console.log('5. –í–≤–æ–¥ OTP –∫–æ–¥–∞...');
    await page.waitForSelector('input[placeholder*="123456"]', { timeout: 5000 });
    await page.fill('input[placeholder*="123456"]', otpData.otp);
    await page.click('button:has-text("–í–æ–π—Ç–∏")');
    
    // –®–∞–≥ 5: –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ CRM
    console.log('6. –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ CRM...');
    await page.waitForURL(/\/orders/, { timeout: 10000 });
    console.log('   ‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!');
    
    // –®–∞–≥ 6: –ü–æ–∏—Å–∫ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏—Ç—Ä–∏–Ω—É –≤ sidebar
    console.log('7. –ü–æ–∏—Å–∫ —Å—Å—ã–ª–∫–∏ "–í–∏—Ç—Ä–∏–Ω–∞ –º–∞–≥–∞–∑–∏–Ω–∞" –≤ sidebar...');
    const storefrontLink = await page.locator('text="–í–∏—Ç—Ä–∏–Ω–∞ –º–∞–≥–∞–∑–∏–Ω–∞"').first();
    await storefrontLink.waitFor({ timeout: 5000 });
    console.log('   ‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞!');
    
    // –®–∞–≥ 7: –ö–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ –≤–∏—Ç—Ä–∏–Ω—É
    console.log('8. –ü–µ—Ä–µ—Ö–æ–¥ –≤ –≤–∏—Ç—Ä–∏–Ω—É...');
    await storefrontLink.click();
    
    // –®–∞–≥ 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ URL –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    console.log('9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ç—Ä–∏–Ω—ã...');
    await page.waitForURL(/\/shop\/\d+/, { timeout: 10000 });
    const currentUrl = page.url();
    console.log('   –¢–µ–∫—É—â–∏–π URL:', currentUrl);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ storefront v2 (–∏—â–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã)
    await page.waitForSelector('[class*="storefront"]', { timeout: 5000 });
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
    const productsVisible = await page.locator('[data-testid="product-item"]').count();
    console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–∏–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:', productsVisible);
    
    console.log('‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!');
    console.log('   - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: ‚úÖ');
    console.log('   - –°—Å—ã–ª–∫–∞ –≤ sidebar: ‚úÖ'); 
    console.log('   - –ü–µ—Ä–µ—Ö–æ–¥ –≤ vitrina: ‚úÖ');
    console.log('   - URL storefront v2: ‚úÖ');
    console.log('   - –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤: ‚úÖ');
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    await page.screenshot({ path: 'storefront-test-result.png', fullPage: true });
    console.log('   üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: storefront-test-result.png');
    
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê:', error.message);
    await page.screenshot({ path: 'storefront-test-error.png', fullPage: true });
  } finally {
    await browser.close();
  }
})();